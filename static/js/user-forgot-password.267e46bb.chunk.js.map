{"version":3,"sources":["helpers/Notifikasi.js","helpers/IntlMessages.js","components/common/react-notifications/index.js","helpers/AlertDialog.js","views/user/forgot-password.js"],"names":["createNotification","type","textA","b","textB","NotificationManager","success","warning","error","alert","info","injectIntl","props","withRef","Notifications","Modal","handleClose","setOpen","url","push","open","onClose","aria-labelledby","id","className","text","onClick","color","connect","authUser","user","loading","useState","username","form","setForm","isAlert","setIsAlert","alertText","setAlertText","alertURL","setAlertURL","xxs","md","to","name","onChange","ev","value","target","key","newForm","autoComplete","size","mControl","forgetPassword","then","resp","Notifikasi","catch","err","isArray","length","message","history"],"mappings":"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","file":"static/js/user-forgot-password.267e46bb.chunk.js","sourcesContent":["import { NotificationManager } from \"../components/common/react-notifications\";\r\nconst createNotification = (type, textA, b) => {\r\n    let textB = b || \"\";\r\n    switch (type) {\r\n        case \"success\":\r\n            NotificationManager.success(\r\n                textA,\r\n                textB,\r\n                3000,\r\n                null,\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        case \"warning\":\r\n            NotificationManager.warning(\r\n                textA,\r\n                textB,\r\n                3000,\r\n                null,\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        case \"error\":\r\n            NotificationManager.error(\r\n                textA,\r\n                textB,\r\n                5000,\r\n                () => {\r\n                    alert(\"callback\");\r\n                },\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        default:\r\n            NotificationManager.info(\"Info message\");\r\n            break;\r\n    }\r\n};\r\nexport default createNotification;","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n    withRef: false\r\n});\r\n","import Notifications from './Notifications.js';\r\nimport NotificationContainer from './NotificationContainer';\r\nimport NotificationManager from './NotificationManager';\r\n\r\nexport { Notifications, NotificationContainer, NotificationManager };\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n        if(props.url){\r\n            props.push(`${props.url}`)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Kemina Dental Care Say : </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\" className=\"colorText1\">\r\n                    {props.text}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Oke\r\n          </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Card, CardTitle, Form, Label, Input, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport mControl from '../../Controler/c_User'\r\nimport Notifikasi from '../../helpers/Notifikasi'\r\nimport AlertDialog from '../../helpers/AlertDialog'\r\nimport { isArray } from \"util\";\r\n\r\n\r\n\r\nconst ForgetPassword = props => {\r\n  const [form, setForm] = useState({ username: '' })\r\n  const [isAlert, setIsAlert] = useState(false)\r\n  const [alertText, setAlertText] = useState(true)\r\n  const [alertURL, setAlertURL] = useState()\r\n  const handleChange = (ev) => {\r\n    var value = ev.target.value;\r\n    const key = ev.target.id || ev.target.name;\r\n    var newForm = { ...form }\r\n    newForm[key] = value;\r\n    setForm(newForm);\r\n  }\r\n  const onForget = () => {\r\n    mControl.forgetPassword(form.username).then(resp => {\r\n      if (resp) {\r\n        setAlertURL(\"/user/login\")\r\n        setAlertText(\"Permintaan reset password anda berhasil, buka email anda untuk reset akun.\")\r\n        setIsAlert(true)\r\n      } else {\r\n        Notifikasi(\"error\", \"Server tidak dapat menjalankan perintah Anda saat ini. Silakan coba sesaat lagi\", \"Gagal Forget Password\")\r\n      }\r\n    }).catch(err => {\r\n      if (isArray(err) && err.length > 0) {\r\n        Notifikasi(\"error\", err[0].message, \"Gagal Forget Password\")\r\n      } else if (typeof err) {\r\n        Notifikasi(\"error\", err.message, \"Gagal Forget Password\")\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    })\r\n\r\n  }\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n        <Card className=\"auth-card\">\r\n          <div className=\"position-relative image-side \">\r\n            <p className=\"text-white h2\">Welcome to Kemina Dental Care</p>\r\n            <p className=\"white mb-0\">\r\n              Please use this form to forget password. <br />\r\n              If you are a account, please{\" \"}\r\n              <NavLink to={`/user/login`} className=\"linkColor\">login</NavLink> or <NavLink to={`/user/register`} className=\"linkColor\">register</NavLink>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"form-side\">\r\n            <NavLink to={`/`} className=\"white\">\r\n              <span className=\"logo-single\" />\r\n            </NavLink>\r\n            <CardTitle className=\"mb-4\">\r\n              <IntlMessages id=\"user.forgot-password\" />\r\n            </CardTitle>\r\n            <Form>\r\n\r\n              <Label className=\"form-group has-float-label mb-4\">\r\n                <Input name=\"username\" onChange={handleChange} type=\"email\" autoComplete=\"false\" />\r\n                <IntlMessages id=\"user.email\" />\r\n              </Label>\r\n\r\n\r\n              <div className=\"d-flex justify-content-end align-items-center\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  className=\"btn-shadow\"\r\n                  size=\"lg\"\r\n                  onClick={onForget}\r\n                >\r\n                  <IntlMessages id=\"user.forget-button\" />\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </Card>\r\n        <AlertDialog open={isAlert} setOpen={setIsAlert} text={alertText} url={alertURL} push={props.history.push} />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { user, loading } = authUser;\r\n  return { user, loading };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(ForgetPassword);\r\n"],"sourceRoot":""}