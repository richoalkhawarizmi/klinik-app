{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/CustomBootstrap.js","Controler/c_User.js","../node_modules/reactstrap/es/Card.js","layout/UserLayout.js","views/user/aktivasi.js","views/user/index.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Colxx","props","widths","Separator","className","User","dataUser","clientID","token","username","jenisUser","Promise","resolve","reject","query","GQL","then","resp","errors","data","detailUser","catch","selectKlinikPasien","kodeklinik","namaklinik","updateLogin","simpanUser","selectKlinikAdmin","hapusUser","registerUser","nama","alamat","password","noHp","aktivasiUser","salt","forgetPassword","reqResetPassword","resetPassword","resetNewPassword","loginUser","updateProfil","propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","UserLayout","document","classList","add","remove","this","children","Component","connect","authUser","user","loading","match","params","useState","isReaload","setIsReaload","resetSukses","setResetSukses","useEffect","mControl","console","error","finally","Row","xxs","md","to","Login","lazy","Register","ForgotPassword","ResetPassword","fallback","exact","from","url","path","render"],"mappings":"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","file":"static/js/views-user.5c26712d.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import GQL from '../helpers/GQL'\r\n\r\n\r\nconst User = {\r\n\tdataUser: (clientID, token, username, jenisUser) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n                query {\r\n                    detailUser(username:\"${username}\",jenisUser:\"${jenisUser}\"){\r\n                        superadmin\r\n                        nama\r\n                        noHp\r\n                        jenisUser\r\n                  }\r\n                }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));;\r\n\t\t\t\tif (resp.data && resp.data.detailUser) return (resolve(resp.data.detailUser));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tselectKlinikPasien: (clientID, token, kodeklinik, namaklinik, username) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\tupdateLogin(kodeklinik: \"${kodeklinik}\", namaklinik: \"${namaklinik}\")\r\n\t\t\t\tsimpanUser(input:{username:\"${username}\"}, kodeklinik:\"${kodeklinik}\", namaklinik: \"${namaklinik}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.updateLogin && resp.data.simpanUser) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tselectKlinikAdmin: (clientID, token, kodeklinik, namaklinik) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\tupdateLogin(kodeklinik: \"${kodeklinik}\", namaklinik: \"${namaklinik}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.updateLogin) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\thapusUser: (clientID, token, username) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\thapusUser(username: \"${username}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.hapusUser) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tregisterUser: (username, nama, alamat, password, noHp) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\tregisterUser(input:{\r\n\t\t\t\t\tusername:\"${username}\", \r\n\t\t\t\t\tpassword:\"${password}\", \r\n\t\t\t\t\tnama:\"${nama}\", \r\n\t\t\t\t\tnoHp:\"${noHp}\", \r\n\t\t\t\t\talamat:\"${alamat}\"})\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.registerUser) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\taktivasiUser: (username, salt) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\taktivasiUser(username:\"${username}\", salt: \"${salt}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.aktivasiUser) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tforgetPassword: (username) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\treqResetPassword(username:\"${username}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.reqResetPassword) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tresetPassword: (username, salt, password) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\tresetNewPassword(username:\"${username}\", salt: \"${salt}\", password:\"${password}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.resetNewPassword) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tloginUser: (username, password) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tquery {\r\n\t\t\t\tloginUser(username:\"${username}\",password:\"${password}\"){\r\n\t\t\t\t\tclientID\r\n\t\t\t\t\ttoken\r\n\t\t\t\t\tsuperadmin\r\n\t\t\t\t\tjenisUser\r\n\t\t\t\t\tklinik{\r\n\t\t\t\t\t\tkodeklinik\r\n\t\t\t\t\t\tnamaklinik\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.loginUser) return (resolve(resp.data.loginUser));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tdetailUser: (clientID, token, username, jenisUser) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n                query {\r\n                    detailUser(username:\"${username}\",jenisUser:\"${jenisUser}\"){\r\n                        username\r\n                        nama\r\n\t\t\t\t\t\tnoHp\r\n\t\t\t\t\t\talamat\r\n                  }\r\n                }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));;\r\n\t\t\t\tif (resp.data && resp.data.detailUser) return (resolve(resp.data.detailUser));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tupdateProfil: (clientID, token, username,  nama, noHp, alamat, jenisUser,  kodeklinik, namaklinik) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst query = `\r\n\t\t\tmutation {\r\n\t\t\t\tsimpanUser(input:{username:\"${username}\", nama:\"${nama}\", noHp:\"${noHp}\", alamat:\"${alamat}\", jenisUser:\"${jenisUser}\"},kodeklinik: \"${kodeklinik}\", namaklinik: \"${namaklinik}\")\r\n\t\t\t  }\r\n            `\r\n\t\t\tGQL(query, clientID, token).then(resp => {\r\n\t\t\t\tif (resp.errors) return (reject(resp.errors));\r\n\t\t\t\tif (resp.data && resp.data.simpanUser) return (resolve(true));\r\n\t\t\t\treturn (resolve([]))\r\n\t\t\t}).catch(err => {\r\n\t\t\t\treturn (reject(err));\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n};\r\n\r\nexport default User;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { Component, Fragment } from \"react\";\r\n\r\nclass UserLayout extends Component {\r\n  componentDidMount() {\r\n    document.body.classList.add(\"background\");\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"background\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"fixed-background\" />\r\n        <main>\r\n          <div className=\"container\">{this.props.children}</div>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserLayout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Card } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../redux/actions\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport mControl from '../../Controler/c_User'\r\n\r\n\r\nconst Register = props => {\r\n    const username = props.match.params.username\r\n    const salt = props.match.params.salt\r\n    const [isReaload, setIsReaload] = useState(true)\r\n    const [resetSukses, setResetSukses] = useState(false)\r\n\r\n    useEffect(() => {\r\n        mControl.aktivasiUser(username, salt).then(resp => {\r\n            setResetSukses(true);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        }).finally(() => setIsReaload(false))\r\n        return () => {\r\n            \r\n        }\r\n    }, [username, salt])\r\n    return (\r\n        <Row className=\"h-100\">\r\n            <Colxx xxs=\"12\" md=\"12\" className=\"mx-auto my-auto\">\r\n                <Card className=\"auth-card\">\r\n                    <div className=\"pd30\">\r\n                        {(!isReaload && resetSukses) && (\r\n                            <h4 className=\"text-center\">Selamat user anda telah berhasil di aktivasi,  <NavLink to={`/user/login`} className=\"linkColor\"><b> Klik untuk login</b></NavLink>.</h4>\r\n                        )}\r\n                        {(!isReaload && !resetSukses) && (\r\n                            <h4 className=\"text-center\">Gagal aktivasi akun anda,  <NavLink to={`/user/register`} className=\"linkColor\"><b> Klik untuk register</b></NavLink>.</h4>\r\n                        )}\r\n                        {(isReaload && !resetSukses) && (\r\n                            <Skeleton />\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </Colxx>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n    const { user, loading } = authUser;\r\n    return { user, loading };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        registerUser\r\n    }\r\n)(Register);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport UserLayout from '../../layout/UserLayout';\r\nimport Aktivasi from './aktivasi'\r\n\r\nconst Login = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-login\" */ './login')\r\n);\r\nconst Register = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-register\" */ './register')\r\n);\r\nconst ForgotPassword = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-forgot-password\" */ './forgot-password')\r\n);\r\nconst ResetPassword = React.lazy(() =>\r\n  import(/* webpackChunkName: \"user-reset-password\" */ './reset-password')\r\n);\r\n\r\nconst User = ({ match }) => {\r\n  return (\r\n    <UserLayout>\r\n      <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n          <Redirect exact from={`${match.url}/`} to={`${match.url}/login`} />\r\n          <Route\r\n            path={`${match.url}/login`}\r\n            render={props => <Login {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/register`}\r\n            render={props => <Register {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/forgot-password`}\r\n            render={props => <ForgotPassword {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/reset-password/:username/:salt`}\r\n            render={props => <ResetPassword {...props} />}\r\n          />\r\n          <Route\r\n            path={`${match.url}/aktivasi/:username/:salt`}\r\n            render={props => <Aktivasi {...props} />}\r\n          />\r\n          <Redirect to=\"/error\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </UserLayout>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}