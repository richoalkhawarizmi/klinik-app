{"version":3,"sources":["components/common/react-notifications/NotificationContainer.js","components/common/react-notifications/NotificationManager.js","components/common/react-notifications/Notification.js","components/common/react-notifications/Notifications.js","lang/locales/en_US.js","lang/locales/es_ES.js","lang/entries/en-US.js","lang/index.js","lang/entries/es-ES.js","lang/entries/en-US-rtl.js","components/common/ColorSwitcher.js","App.js","helpers/Utils.js"],"names":["NotificationContainer","props","state","notifications","componentWillUnmount","NotificationManager","removeChangeListener","handleStoreChange","setState","handleRequestHide","notification","remove","addChangeListener","this","enterTimeout","leaveTimeout","onRequestHide","React","Component","defaultProps","Constants","listNotify","notify","defaultNotify","id","replace","c","r","Math","random","toString","type","title","message","timeOut","customClassName","priority","unshift","Object","assign","push","emitChange","onClick","create","filter","n","emit","callback","addListener","removeListener","EventEmitter","Notification","componentDidMount","timer","setTimeout","requestHide","clearTimeout","handleClick","className","classnames","role","Notifications","length","TransitionGroup","map","key","Date","getTime","CSSTransition","classNames","timeout","exit","enter","module","exports","EnLang","messages","enMessages","locale","data","appLocaleData","AppLocale","en","enLang","es","esMessages","enrtl","addLocaleData","ColorSwitcher","getContainer","ReactDOM","findDOMNode","toggle","e","preventDefault","isOpen","removeEvents","addEvents","changeThemeColor","color","localStorage","setItem","themeColorStorageKey","window","location","reload","forEach","event","document","addEventListener","handleDocumentClick","removeEventListener","container","contains","target","changeRadius","radius","body","classList","add","themeRadiusStorageKey","selectedColor","getItem","href","FormGroup","Label","for","CustomInput","name","label","inline","defaultChecked","onChange","ViewMain","lazy","ViewApp","ViewUser","ViewError","AuthRoute","component","rest","authLogin","JSON","parse","render","to","pathname","from","App","direction","defaultDirection","localValue","isRtl","getDirection","loginUser","currentAppLocale","Fragment","isMultiColorActive","fallback","path","authUser","exact","connect","settings","user"],"mappings":"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","file":"static/js/App.92e4e263.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationManager from './NotificationManager';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    NotificationManager.addChangeListener(this.handleStoreChange);\r\n  }\r\n\r\n  static propTypes = {\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    enterTimeout: 400,\r\n    leaveTimeout: 400\r\n  };\r\n\r\n  state = {\r\n    notifications: []\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    NotificationManager.removeChangeListener(this.handleStoreChange);\r\n  };\r\n\r\n  handleStoreChange = (notifications) => {\r\n    this.setState({\r\n      notifications\r\n    });\r\n  };\r\n\r\n  handleRequestHide = (notification) => {\r\n    NotificationManager.remove(notification);\r\n  };\r\n\r\n  render() {\r\n    const { notifications } = this.state;\r\n    const { enterTimeout, leaveTimeout } = this.props;\r\n    return (\r\n      <Notifications\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n        notifications={notifications}\r\n        onRequestHide={this.handleRequestHide}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotificationContainer;\r\n","import { EventEmitter } from 'events';\r\n\r\nconst createUUID = () => {\r\n  const pattern = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n  return pattern.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nconst Constants = {\r\n  CHANGE: 'change',\r\n  PRIMARY: 'primary',\r\n  SECONDARY: 'secondary',\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error'\r\n};\r\n\r\nclass NotificationManager extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.listNotify = [];\r\n  }\r\n\r\n  create(notify) {\r\n    const defaultNotify = {\r\n      id: createUUID(),\r\n      type: 'info',\r\n      title: null,\r\n      message: null,\r\n      timeOut: 5000,\r\n      customClassName:\"\"\r\n    };\r\n    if (notify.priority) {\r\n      this.listNotify.unshift(Object.assign(defaultNotify, notify));\r\n    } else {\r\n      this.listNotify.push(Object.assign(defaultNotify, notify));\r\n    }\r\n    this.emitChange();\r\n  }\r\n\r\n  \r\n  primary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.PRIMARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  secondary(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SECONDARY,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  info(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.INFO,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  success(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.SUCCESS,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  warning(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.WARNING,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  error(message, title, timeOut, onClick, priority, customClassName) {\r\n    this.create({\r\n      type: Constants.ERROR,\r\n      message,\r\n      title,\r\n      timeOut,\r\n      onClick,\r\n      priority,\r\n      customClassName\r\n    });\r\n  }\r\n\r\n  remove(notification) {\r\n    this.listNotify = this.listNotify.filter(n => notification.id !== n.id);\r\n    this.emitChange();\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(Constants.CHANGE, this.listNotify);\r\n  }\r\n\r\n  addChangeListener(callback) {\r\n    this.addListener(Constants.CHANGE, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(Constants.CHANGE, callback);\r\n  }\r\n}\r\n\r\nexport default new NotificationManager();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass Notification extends React.Component {\r\n  static propTypes = {\r\n    type: PropTypes.oneOf(['info', 'success', 'warning', 'error', \"primary\", \"secondary\"]),\r\n    title: PropTypes.node,\r\n    message: PropTypes.node.isRequired,\r\n    timeOut: PropTypes.number,\r\n    onClick: PropTypes.func,\r\n    onRequestHide: PropTypes.func,\r\n    customClassName: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'info',\r\n    title: null,\r\n    message: null,\r\n    timeOut: 5000,\r\n    onClick: () => {\r\n    },\r\n    onRequestHide: () => {\r\n    },\r\n    customClassName:\"\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { timeOut } = this.props;\r\n    if (timeOut !== 0) {\r\n      this.timer = setTimeout(this.requestHide, timeOut);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { onClick } = this.props;\r\n    if (onClick) {\r\n      onClick();\r\n    }\r\n    this.requestHide();\r\n  };\r\n\r\n  requestHide = () => {\r\n    const { onRequestHide } = this.props;\r\n    if (onRequestHide) {\r\n      onRequestHide();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { type, message } = this.props;\r\n    let { title } = this.props;\r\n    const className = classnames(['notification', `notification-${type}`, this.props.customClassName]);\r\n    title = title ? (<h4 className=\"title\">{title}</h4>) : null;\r\n    return (\r\n      <div className={className} onClick={this.handleClick}>\r\n        <div className=\"notification-message\" role=\"alert\">\r\n          {title}\r\n          <div className=\"message\">{message}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport classnames from 'classnames';\r\nimport Notification from './Notification';\r\n\r\nclass Notifications extends React.Component {\r\n  static propTypes = {\r\n    notifications: PropTypes.array.isRequired,\r\n    onRequestHide: PropTypes.func,\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    notifications: [],\r\n    onRequestHide: () => {\r\n    },\r\n    enterTimeout: 400,\r\n    leaveTimeout: 400\r\n  };\r\n\r\n  handleRequestHide = notification => () => {\r\n    const { onRequestHide } = this.props;\r\n    if (onRequestHide) {\r\n      onRequestHide(notification);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { notifications, enterTimeout, leaveTimeout } = this.props;\r\n    const className = classnames('notification-container', {\r\n      'notification-container-empty': notifications.length === 0\r\n    });\r\n    return (\r\n      <div className={className}>\r\n        <TransitionGroup>\r\n          {notifications.map((notification) => {\r\n            const key = notification.id || new Date().getTime();\r\n            return (\r\n              <CSSTransition\r\n                classNames=\"notification\"\r\n                key={key}\r\n                timeout={{ exit: leaveTimeout, enter: enterTimeout }}>\r\n              <Notification\r\n                key={key}\r\n                type={notification.type}\r\n                title={notification.title}\r\n                message={notification.message}\r\n                timeOut={notification.timeOut}\r\n                onClick={notification.onClick}\r\n                onRequestHide={this.handleRequestHide(notification)}\r\n                customClassName={notification.customClassName}\r\n              />\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notifications;\r\n","/* Gogo Language Texts\r\n\r\nTable of Contents\r\n\r\n01.General\r\n02.User Login, Logout, Register\r\n03.Menu\r\n04.Error Page\r\n*/\r\n\r\n\r\nmodule.exports = {\r\n  /* 01.General */\r\n  \"general.copyright\": \"Gogo React © 2018 All Rights Reserved.\",\r\n\r\n  /* 02.User Login, Logout, Register */\r\n  \"user.login-title\": \"Login\",\r\n  \"user.register\": \"Register\",\r\n  \"user.forgot-password\": \"Forgot Password\",\r\n  \"user.reset-password\": \"Reset Password\",\r\n  \"user.email\": \"E-mail\",\r\n  \"user.password\": \"Password\",\r\n  \"user.alamat\": \"Alamat\",\r\n  \"user.nohp\": \"No HP\",\r\n  \"user.forgot-password-question\": \"Forget password?\",\r\n  \"user.fullname\": \"Nama\",\r\n  \"user.login-button\": \"LOGIN\",\r\n  \"user.register-button\": \"REGISTER\",\r\n  \"user.reset-password-button\": \"RESET\",\r\n  \"user.buy\": \"BUY\",\r\n  \"user.username\": \"Username\",\r\n  \"user.reset-button\":\"Reset Password\",\r\n  \"user.new-password\":\"New Password\",\r\n  \"user.new-password-again\":\"New Password Again\",\r\n  \"user.forget-button\":\"Forget\",\r\n\r\n  /* 03.Menu */\r\n  \"menu.app\": \"Home\",\r\n  \"menu.dashboards\": \"Dashboards\",\r\n  \"menu.gogo\": \"Gogo\",\r\n  \"menu.start\": \"Start\",\r\n  \"menu.second-menu\": \"Second Menu\",\r\n  \"menu.second\": \"Second\",\r\n  \"menu.ui\": \"UI\",\r\n  \"menu.charts\": \"Charts\",\r\n  \"menu.chat\": \"Chat\",\r\n  \"menu.survey\": \"Survey\",\r\n  \"menu.todo\": \"Todo\",\r\n  \"menu.search\" :\"Search\",\r\n  \"menu.docs\": \"Docs\",\r\n  \"menu.blank-page\": \"Blank Page\",\r\n  \"menu.manajemenklinik\": \"Manajemen Klinik\",\r\n  \"menu.dashboard\": \"Dashboard\",\r\n  \"menu.transaksi\": \"Transaksi\",\r\n  \"menu.konfirmasi-jadwal\": \"Konfirmasi Jadwal\",\r\n  \"menu.daftar-antrian\": \"Daftar Antrian\",\r\n  \"menu.penjualan\": \"Penjualan\",\r\n  \"menu.pembelian\": \"Pembelian\",\r\n  \"menu.inventory\": \"inventory\",\r\n  \"menu.stok-tersedia\": \"Stok Tersedia\",\r\n  \"menu.stok-masuk\": \"Stok Masuk\",\r\n  \"menu.stok-keluar\": \"Stok Keluar\",\r\n  \"menu.data-master\": \"Data Master\",\r\n  \"menu.dokter\": \"Dokter\",\r\n  \"menu.pasien\": \"Pasien\",\r\n  \"menu.admin\": \"Admin\",\r\n  \"menu.laporan\": \"Laporan\",\r\n  \"menu.buat-janji\": \"Buat janji\",\r\n  \"menu.riwayat\": \"Riwayat\",\r\n  \"menu.profil\": \"Profil\",\r\n  \"menu.list-janji\": \"List Janji\",\r\n  \"menu.jenis\": \"Jenis Produk\",\r\n  \"menu.kategori\": \"Kategori Produk\",\r\n  \"menu.produk\": \"Produk\",\r\n  \"menu.laporan-penjualan\": \"Laporan Penjualan\",\r\n  \"menu.laporan-pembelian\": \"Laporan Pembelian\",\r\n  \"menu.laporan-pelayanan\": \"Laporan Pelayanan Pasien\",\r\n  \"menu.listjanji\": \"List Janji\",\r\n  \"menu.layanan\":\"Layanan\",\r\n\r\n /* 04.Error Page */\r\n \"pages.error-title\": \"Ooops... looks like an error occurred!\",\r\n \"pages.error-code\": \"Error code\",\r\n \"pages.go-back-home\": \"GO BACK HOME\",\r\n};\r\n","/* Gogo Language Texts\r\n\r\nTable of Contents\r\n\r\n01.General\r\n02.User Login, Logout, Register\r\n03.Menu\r\n04.Error Page\r\n*/\r\n\r\nmodule.exports = {\r\n  /* 01.General */\r\n  \"general.copyright\": \"Gogo React © Todos los derechos reservados.\",\r\n\r\n  /* 02.Inicio de sesión de usuario, cierre de sesión, registro */\r\n  \"user.login-title\": \"Iniciar sesión\",\r\n  \"user.register\": \"Registro\",\r\n  \"user.forgot-password\": \"Se te olvidó tu contraseña\",\r\n  \"user.email\": \"Email\",\r\n  \"user.password\": \"Contraseña\",\r\n  \"user.forgot-password-question\": \"¿Contraseña olvidada?\",\r\n  \"user.fullname\": \"Nombre completo\",\r\n  \"user.login-button\": \"INICIAR SESIÓN\",\r\n  \"user.register-button\": \"REGISTRO\",\r\n  \"user.reset-password-button\": \"REINICIAR\",\r\n  \"user.buy\": \"COMPRAR\",\r\n  \"user.username\": \"Nombre de Usuario\",\r\n\r\n  /* 03.Menú */\r\n  \"menu.app\": \"Inicio\",\r\n  \"menu.dashboards\": \"Tableros\",\r\n  \"menu.gogo\": \"Gogo\",\r\n  \"menu.start\": \"Comienzo\",\r\n  \"menu.second-menu\": \"Segundo menú\",\r\n  \"menu.second\": \"Segundo\",\r\n  \"menu.ui\": \"IU\",\r\n  \"menu.charts\": \"Gráficos\",\r\n  \"menu.chat\": \"Chatea\",\r\n  \"menu.survey\": \"Encuesta\",\r\n  \"menu.todo\": \"Notas\",\r\n  \"menu.search\": \"Búsqueda\",\r\n  \"menu.docs\": \"Docs\",\r\n  \"menu.blank-page\": \"Blank Page\",\r\n  /* 04.Error  */\r\n  \"pages.error-title\": \"Vaya, parece que ha ocurrido un error!\",\r\n  \"pages.error-code\": \"Código de error\",\r\n  \"pages.go-back-home\": \"REGRESAR A INICIO\"\r\n};\r\n","import appLocaleData from 'react-intl/locale-data/en';\r\nimport enMessages from '../locales/en_US';\r\n\r\nconst EnLang = {\r\n    messages: {\r\n        ...enMessages\r\n    },\r\n    locale: 'en-US',\r\n    data: appLocaleData\r\n};\r\nexport default EnLang;","import { addLocaleData } from 'react-intl';\r\nimport enLang from './entries/en-US';\r\nimport esLang from './entries/es-ES';\r\nimport enRtlLang from './entries/en-US-rtl';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    es: esLang,\r\n    enrtl:enRtlLang\r\n};\r\naddLocaleData(AppLocale.en.data);\r\naddLocaleData(AppLocale.es.data);\r\naddLocaleData(AppLocale.enrtl.data);\r\n\r\nexport default AppLocale;\r\n","import appLocaleData from 'react-intl/locale-data/es';\r\nimport esMessages from '../locales/es_ES';\r\n\r\nconst EsLang = {\r\n    messages: {\r\n        ...esMessages\r\n    },\r\n    locale: 'es-ES',\r\n    data: appLocaleData\r\n};\r\nexport default EsLang;","import appLocaleData from 'react-intl/locale-data/en';\r\nimport enMessages from '../locales/en_US';\r\n\r\nconst EnLangRtl = {\r\n    messages: {\r\n        ...enMessages\r\n    },\r\n    locale: 'en-US',\r\n    data: appLocaleData\r\n};\r\nexport default EnLangRtl;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  themeColorStorageKey,\r\n  themeRadiusStorageKey\r\n} from '../../constants/defaultValues';\r\nimport { FormGroup, Label, CustomInput } from 'reactstrap';\r\nclass ColorSwitcher extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      selectedColor: localStorage.getItem(themeColorStorageKey),\r\n      radius: localStorage.getItem(themeRadiusStorageKey) || 'rounded'\r\n    };\r\n    this.removeEvents();\r\n  }\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = e => {\r\n    e.preventDefault();\r\n    const isOpen = this.state.isOpen;\r\n    if (!isOpen) {\r\n      this.addEvents();\r\n    } else {\r\n      this.removeEvents();\r\n    }\r\n    this.setState({\r\n      isOpen: !isOpen\r\n    });\r\n  };\r\n  changeThemeColor = (e, color) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(themeColorStorageKey, color);\r\n    this.toggle(e);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.changeRadius(this.state.radius);\r\n  }\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart'].forEach(event =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n  removeEvents = () => {\r\n    ['click', 'touchstart'].forEach(event =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = e => {\r\n    const container = this.getContainer();\r\n    if (container.contains(e.target) || container === e.target) {\r\n      return;\r\n    }\r\n    this.toggle(e);\r\n  };\r\n  changeRadius = radius => {\r\n    if (radius === 'flat') {\r\n      document.body.classList.remove('rounded');\r\n    } else {\r\n      document.body.classList.add('rounded');\r\n    }\r\n    this.setState({\r\n      radius\r\n    });\r\n    localStorage.setItem(themeRadiusStorageKey, radius);\r\n  };\r\n\r\n  render() {\r\n    const { selectedColor, radius } = this.state;\r\n    return (\r\n      <div className={`theme-colors ${this.state.isOpen ? 'shown' : ''}`}>\r\n        <div className=\"p-4\">\r\n          <p className=\"text-muted mb-2\">Light Theme</p>\r\n          <div className=\"d-flex flex-row justify-content-between mb-4\">\r\n            {['purple', 'blue', 'green', 'orange', 'red'].map(color => (\r\n              <a\r\n                key={`light.${color}`}\r\n                href={`#light.${color}`}\r\n                className={`theme-color theme-color-${color} ${\r\n                  selectedColor === `light.${color}` ? 'active' : ''\r\n                }`}\r\n                onClick={e => this.changeThemeColor(e, `light.${color}`)}\r\n              >\r\n                <span>`light.${color}`</span>\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <p className=\"text-muted mb-2\">Dark Theme</p>\r\n          <div className=\"d-flex flex-row justify-content-between\">\r\n            {['purple', 'blue', 'green', 'orange', 'red'].map(color => (\r\n              <a\r\n                key={`dark.${color}`}\r\n                href={`#dark.${color}`}\r\n                className={`theme-color theme-color-${color} ${\r\n                  selectedColor === `dark.${color}` ? 'active' : ''\r\n                }`}\r\n                onClick={e => this.changeThemeColor(e, `dark.${color}`)}\r\n              >\r\n                <span>`dark.${color}`</span>\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\" pb-0 pl-4 pt-4\">\r\n          <FormGroup>\r\n            <Label for=\"radiusRadio\">Border Radius </Label>\r\n            <div>\r\n              <CustomInput\r\n                type=\"radio\"\r\n                name=\"radiusRadio\"\r\n                id=\"rounded\"\r\n                label=\"Rounded\"\r\n                inline\r\n                defaultChecked={radius === 'rounded'}\r\n                onChange={() => this.changeRadius('rounded')}\r\n              />\r\n              <CustomInput\r\n                type=\"radio\"\r\n                name=\"radiusRadio\"\r\n                id=\"flat\"\r\n                label=\"Flat\"\r\n                inline\r\n                defaultChecked={radius === 'flat'}\r\n                onChange={() => this.changeRadius('flat')}\r\n              />\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n\r\n        {/* <a href=\"#section\" className=\"theme-button\" onClick={this.toggle}>\r\n          {' '}\r\n          <i className=\"simple-icon-magic-wand\" />{' '}\r\n        </a> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorSwitcher;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { IntlProvider } from 'react-intl';\r\nimport AppLocale from './lang';\r\nimport ColorSwitcher from './components/common/ColorSwitcher';\r\nimport NotificationContainer from './components/common/react-notifications/NotificationContainer';\r\nimport { isMultiColorActive } from './constants/defaultValues';\r\nimport { getDirection } from './helpers/Utils';\r\n\r\nconst ViewMain = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views\" */ './views')\r\n);\r\nconst ViewApp = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-app\" */ './views/app')\r\n);\r\nconst ViewUser = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-user\" */ './views/user')\r\n);\r\nconst ViewError = React.lazy(() =>\r\n  import(/* webpackChunkName: \"views-error\" */ './views/error')\r\n);\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  const authLogin = JSON.parse(localStorage.getItem('keminaAdmin'))\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authLogin ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/user/login',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const direction = getDirection();\r\n    if (direction.isRtl) {\r\n      document.body.classList.add('rtl');\r\n      document.body.classList.remove('ltr');\r\n    } else {\r\n      document.body.classList.add('ltr');\r\n      document.body.classList.remove('rtl');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { locale, loginUser } = this.props;\r\n    const currentAppLocale = AppLocale[locale];\r\n\r\n    return (\r\n      <div className=\"h-100\">\r\n        <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}\r\n        >\r\n          <React.Fragment>\r\n            <NotificationContainer />\r\n            {isMultiColorActive && <ColorSwitcher />}\r\n            <Suspense fallback={<div className=\"loading\" />}>\r\n              <Router>\r\n                <Switch>\r\n                  <AuthRoute\r\n                    path=\"/app\"\r\n                    authUser={loginUser}\r\n                    component={ViewApp}\r\n                  />\r\n                  <Route\r\n                    path=\"/user\"\r\n                    render={props => <ViewUser {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/error\"\r\n                    exact\r\n                    render={props => <ViewError {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => <ViewMain {...props} />}\r\n                  />\r\n                  <Redirect to=\"/error\" />\r\n                </Switch>\r\n              </Router>\r\n            </Suspense>\r\n          </React.Fragment>\r\n        </IntlProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser, settings }) => {\r\n  const { user: loginUser } = authUser;\r\n  const { locale } = settings;\r\n  return { loginUser, locale };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(App);\r\n","import { defaultDirection } from \"../constants/defaultValues\";\r\n\r\nexport const mapOrder = (array, order, key) => {\r\n  array.sort(function (a, b) {\r\n    var A = a[key], B = b[key];\r\n    if (order.indexOf(A + \"\") > order.indexOf(B + \"\")) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n  return array;\r\n};\r\n\r\n\r\nexport const getDateWithFormat = () => {\r\n  const today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth() + 1; //January is 0!\r\n\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = '0' + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = '0' + mm;\r\n  }\r\n  return dd + '.' + mm + '.' + yyyy;\r\n}\r\n\r\nexport const getCurrentTime=()=>{\r\n  const now = new Date();\r\n  return now.getHours() + \":\" + now.getMinutes()\r\n}\r\n\r\nexport const getDirection = () => {\r\n  let direction = defaultDirection;\r\n  if (localStorage.getItem(\"direction\")) {\r\n    const localValue = localStorage.getItem(\"direction\");\r\n    if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n      direction = localValue;\r\n    }\r\n  }\r\n  return {\r\n    direction,\r\n    isRtl: direction === \"rtl\"\r\n  };\r\n};\r\n\r\nexport const setDirection = localValue => {\r\n  let direction = \"ltr\";\r\n  if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n    direction = localValue;\r\n  }\r\n  localStorage.setItem(\"direction\", direction);\r\n};\r\n\r\n"],"sourceRoot":""}