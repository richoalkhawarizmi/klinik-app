{"version":3,"sources":["helpers/Notifikasi.js","helpers/IntlMessages.js","components/common/react-notifications/index.js","helpers/AlertDialog.js","views/user/reset-password.js"],"names":["createNotification","type","textA","b","textB","NotificationManager","success","warning","error","alert","info","injectIntl","props","withRef","Notifications","Modal","handleClose","setOpen","url","push","open","onClose","aria-labelledby","id","className","text","onClick","color","connect","authUser","user","loading","username","match","params","salt","useState","password1","password2","form","setForm","isAlert","setIsAlert","alertText","setAlertText","alertURL","setAlertURL","handleChange","ev","value","target","key","name","newForm","xxs","md","to","onChange","autoComplete","size","length","Notifikasi","mControl","resetPassword","then","resp","catch","err","isArray","message","history"],"mappings":"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","file":"static/js/user-reset-password.882c3de1.chunk.js","sourcesContent":["import { NotificationManager } from \"../components/common/react-notifications\";\r\nconst createNotification = (type, textA, b) => {\r\n    let textB = b || \"\";\r\n    switch (type) {\r\n        case \"success\":\r\n            NotificationManager.success(\r\n                textA,\r\n                textB,\r\n                3000,\r\n                null,\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        case \"warning\":\r\n            NotificationManager.warning(\r\n                textA,\r\n                textB,\r\n                3000,\r\n                null,\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        case \"error\":\r\n            NotificationManager.error(\r\n                textA,\r\n                textB,\r\n                5000,\r\n                () => {\r\n                    alert(\"callback\");\r\n                },\r\n                null,\r\n                \"filled\"\r\n            );\r\n            break;\r\n        default:\r\n            NotificationManager.info(\"Info message\");\r\n            break;\r\n    }\r\n};\r\nexport default createNotification;","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = props => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n    withRef: false\r\n});\r\n","import Notifications from './Notifications.js';\r\nimport NotificationContainer from './NotificationContainer';\r\nimport NotificationManager from './NotificationManager';\r\n\r\nexport { Notifications, NotificationContainer, NotificationManager };\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\n\r\nconst Modal = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n        if(props.url){\r\n            props.push(`${props.url}`)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Kemina Dental Care Say : </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\" className=\"colorText1\">\r\n                    {props.text}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Oke\r\n          </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Card, CardTitle, Form, Label, Input, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport mControl from '../../Controler/c_User'\r\nimport Notifikasi from '../../helpers/Notifikasi'\r\nimport AlertDialog from '../../helpers/AlertDialog'\r\nimport { isArray } from \"util\";\r\n\r\n\r\n\r\nconst ResetPassword = props => {\r\n    const username = props.match.params.username\r\n    const salt = props.match.params.salt\r\n    const [form, setForm] = useState({ password1: '', password2: '' })\r\n    const [isAlert, setIsAlert] = useState(false)\r\n    const [alertText, setAlertText] = useState(true)\r\n    const [alertURL, setAlertURL] = useState()\r\n    const handleChange = (ev) => {\r\n        var value = ev.target.value;\r\n        const key = ev.target.id || ev.target.name;\r\n        var newForm = { ...form }\r\n        newForm[key] = value;\r\n        setForm(newForm);\r\n    }\r\n    const onForget = () => {\r\n        if (form.password1 === form.password2) {\r\n            if (form.password1.length < 7) return Notifikasi(\"error\", \"Password minimal 8 digit\", \"Gagal Reset Password\")\r\n            mControl.resetPassword(username, salt, form.password1).then(resp => {\r\n                if (resp) {\r\n                    setAlertURL(\"/user/login\")\r\n                    setAlertText(\"Reset password anda berhasil, silahkan login dengan password baru anda.\")\r\n                    setIsAlert(true)\r\n                } else {\r\n                    Notifikasi(\"error\", \"Server tidak dapat menjalankan perintah Anda saat ini. Silakan coba sesaat lagi\", \"Gagal Reset Password\")\r\n                }\r\n            }).catch(err => {\r\n                if (isArray(err) && err.length > 0) {\r\n                    Notifikasi(\"error\", err[0].message, \"Gagal Reset Password\")\r\n                } else if (typeof err) {\r\n                    Notifikasi(\"error\", err.message, \"Gagal Reset Password\")\r\n                } else {\r\n                    console.log(err);\r\n                }\r\n            })\r\n        } else {\r\n            Notifikasi(\"error\", \"Password harus sama\", \"Gagal reset\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row className=\"h-100\">\r\n            <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n                <Card className=\"auth-card\">\r\n                    <div className=\"position-relative image-side \">\r\n                        <p className=\"text-white h2\">Welcome to Kemina Dental Care</p>\r\n                        <p className=\"white mb-0\">\r\n                            Please use this form to reset password. <br />\r\n              If you are a account, please{\" \"}\r\n                            <NavLink to={`/user/login`} className=\"linkColor\">login</NavLink> or <NavLink to={`/user/register`} className=\"linkColor\">register</NavLink>\r\n              .\r\n            </p>\r\n                    </div>\r\n                    <div className=\"form-side\">\r\n                        <NavLink to={`/`} className=\"white\">\r\n                            <span className=\"logo-single\" />\r\n                        </NavLink>\r\n                        <CardTitle className=\"mb-4\">\r\n                            <IntlMessages id=\"user.reset-password\" />\r\n                        </CardTitle>\r\n                        <Form>\r\n\r\n                            <Label className=\"form-group has-float-label mb-4\">\r\n                                <Input name=\"password1\" onChange={handleChange} type=\"password\" autoComplete=\"false\" />\r\n                                <IntlMessages id=\"user.new-password\" />\r\n                            </Label>\r\n\r\n                            <Label className=\"form-group has-float-label mb-4\">\r\n                                <Input name=\"password2\" onChange={handleChange} type=\"password\" autoComplete=\"false\" />\r\n                                <IntlMessages id=\"user.new-password-again\" />\r\n                            </Label>\r\n\r\n\r\n                            <div className=\"d-flex justify-content-end align-items-center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    className=\"btn-shadow\"\r\n                                    size=\"lg\"\r\n                                    onClick={onForget}\r\n                                >\r\n                                    <IntlMessages id=\"user.reset-button\" />\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </Card>\r\n                <AlertDialog open={isAlert} setOpen={setIsAlert} text={alertText} url={alertURL} push={props.history.push} />\r\n            </Colxx>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n    const { user, loading } = authUser;\r\n    return { user, loading };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ResetPassword);\r\n"],"sourceRoot":""}